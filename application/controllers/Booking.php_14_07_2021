<?php if(!defined('BASEPATH')) exit('No direct script access allowed');

require APPPATH . '/libraries/BaseController.php';
include_once APPPATH.'/third_party/mpdf/mpdf.php';

class Booking extends BaseController{

    protected $isView;
    protected $isAdd;
    protected $isEdit;
    protected $isDelete;
 
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Booking_model');
        $this->load->model('Fcm_model');
		$this->load->model('tickets_model');        
        $this->isLoggedIn();  
      
        $roleCheck = $this->Common_model->checkpermission('tickets'); 

        //print_r($roleCheck);die;

        $this->global['isView'] = $this->isView = $roleCheck->view;   
         $this->global['isAdd'] = $this->isAdd = $roleCheck->add; 
         $this->global['isEdit'] = $this->isEdit = $roleCheck->edit; 
         $this->global['isDelete'] = $this->isDelete = $roleCheck->delete; 
         $this->global['active_menu'] = 'dashboard'; 

    }
     
    public function index(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();
            //echo '<pre>';print_r($data['ticketsRecords']);die;           
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Listing';
            $this->global['active_menu'] = 'bookings'; 
            
            $this->loadViews("Booking/Bookings", $this->global, $data, NULL);
        }
    }
	
	
	

    public function AllocateBookings(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();    
			//$data['AllocateBookings'] = $this->Booking_model->AllocateBookings(); 			
			$data['TodayBookingRecords'] = $this->Booking_model->TodayBookingListing(); 
			$data['OverdueBookingRecords'] = $this->Booking_model->OverdueBookingListing(); 
			$data['BookingRecords'] = $this->Booking_model->FutureBookingListing();   
			
			//$data['LorryRecords1'] = $this->Booking_model->LorryListAJAX1();  	 
			$data['LorryRecords1'] = $this->Booking_model->LorryListAJAX();  	 
			$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();  	  
			$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	
			$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList();  
			 
			$data['TipRecords'] = $this->Booking_model->TipListAJAX(); 
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Allocate Booking ';
            $this->global['active_menu'] = 'bookingallocate'; 
            
            $this->loadViews("Booking/AllocateBookings", $this->global, $data, NULL);
        }
    }
	public function AllocateBookings1(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();    		
			$data['TodayBookingRecords'] = $this->Booking_model->TodayBookingListing(); 
			$data['OverdueBookingRecords'] = $this->Booking_model->OverdueBookingListing(); 
			$data['BookingRecords'] = $this->Booking_model->FutureBookingListing();   
			 
			//$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();  	  
			//$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	
			//$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList();   
			//$data['TipRecords'] = $this->Booking_model->TipListAJAX(); 
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Allocate Booking ';
            $this->global['active_menu'] = 'bookingallocate'; 
            
            $this->loadViews("Booking/AllocateBookings1", $this->global, $data, NULL);
        }
    }
	
	function AllocateBookingAJAX1(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
			$data['BookingID']  = $this->input->post('BookingID');    
			$data['BookingDateID']= $this->input->post('BookingDateID');     
			$data['BookingDate']= $this->input->post('BookingDate');     
			$data['LoadType'] = $this->input->post('LoadType');     
			$data['PendingLoad']  = $this->input->post('PendingLoad');    
			$data['BookingInfo'] = $this->Booking_model->GetBookingBasicInfo($data['BookingDateID']); 
			//var_dump($data['BookingInfo']);
			//echo $data['BookingInfo']['BookingType'];
			//exit;
			
			if($data['BookingInfo']['BookingType']==1){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedList($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList();   			    	
				} 
			}
			if($data['BookingInfo']['BookingType']==2){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedList1($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList1();   			    	
				} 
			}
			
			$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	    
			$data['TipRecords'] = $this->Booking_model->TipListAJAX(); 
			
			$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();  	  
			$data['Loads'] = $this->Booking_model->ShowBookingDateLoads($data['BookingDateID']); 
			 
			$html = $this->load->view('Booking/AllocateBookingAjax1', $data, true);  
			echo json_encode($html);   
			  
        }
    }
	
	function UpdateBookingLoadAJAX(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
			$data['BookingID']  = $this->input->post('BookingID');    
			$data['BookingDateID']= $this->input->post('BookingDateID');      
			
			$data['BookingInfo'] = $this->Booking_model->GetBookingBasicInfo($data['BookingDateID']); 
			//var_dump($data['BookingInfo']);
			//echo $data['BookingInfo']['BookingType'];
			//exit;
			
			if($data['BookingInfo']['BookingType']==1){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedList($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList();   			    	
				} 
			}
			if($data['BookingInfo']['BookingType']==2){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedList1($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList1();   			    	
				} 
			}
			
			$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	    
			$data['TipRecords'] = $this->Booking_model->TipListAJAX();  
			$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();   
			 
			$html = $this->load->view('Booking/UpdateBookingLoadAJAX', $data, true);  
			echo json_encode($html);   
			  
        }
    }
	
	
	public function Loads(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Loads/Lorry List ';
            $this->global['active_menu'] = 'loads'; 
            
            $this->loadViews("Booking/Loads", $this->global, $data, NULL);
        }
    }
	public function NonAppsLoads(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();       
			
			$data['NonAppsLoads'] = $this->Booking_model->GetNonAppsLoadsData();  	 
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : NonApps Loads/Lorry List ';
            $this->global['active_menu'] = 'nonappsloads'; 
            
            $this->loadViews("Booking/NonAppsLoads", $this->global, $data, NULL);
        }
    }
	
	public function NonAppsLoads1(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();       
			
			$data['NonAppsLoads'] = $this->Booking_model->GetNonAppsLoadsData1();  	 
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Dummy NonApps Loads/Lorry List ';
            $this->global['active_menu'] = 'nonappsloads'; 
            
            $this->loadViews("Booking/NonAppsLoads1", $this->global, $data, NULL);
        }
    }
	
	public function ContractorLoads(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();      
			if ($this->input->server('REQUEST_METHOD') === 'POST'){  
				if(count($_POST['chkbox'])>0){
					$where_in = implode(',',$_POST['chkbox']);  
					$ConInfo = array('Status'=>4);   
					$u = $this->Common_model->update_in("tbl_booking_loads",$ConInfo, 'ConveyanceNo', $where_in);   
					if($u){
						$this->session->set_flashdata('success', 'Selected Loads has been Finished successfully');                  
					}else{
						$this->session->set_flashdata('error', 'Oooops ... Something Error, Please Try Again Later. ');    
					}
				}else{
					$this->session->set_flashdata('error', 'Please select Any Loads to Finish. ');    
				}	  
				redirect('ContractorLoads');
				exit;
			}  
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Contractor Loads/Lorry List ';
            $this->global['active_menu'] = 'cloads'; 
            
            $this->loadViews("Booking/ContractorLoads", $this->global, $data, NULL);
        }
    }
	public function SubcontractorLoads($id){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : SubcontractorLoads/Lorry List ';
            $this->global['active_menu'] = 'subcontractorloads'; 
            
            $this->loadViews("Booking/SubcontractorLoads", $this->global, $data, NULL);
        }
    }
	
	public function AllocateDrivers(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Allocated Drivers';
            $this->global['active_menu'] = 'allocateddrivers'; 
            
            $this->loadViews("Booking/AllocateDrivers", $this->global, $data, NULL);
        }
    }
	public function AjaxAllocateDrivers(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocateDriversData();  
		//echo "<PRE>";
		//print_r($data);
		//echo "</PRE>";
		//exit;
		$this->ajax->send($data);
	}
	public function ConveyanceTickets(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Conveyance Tickets';
            $this->global['active_menu'] = 'conveyance'; 
            
            $this->loadViews("Booking/ConveyanceTickets", $this->global, $data, NULL);
        }
    }
	public function AllMessage(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : All Message';
            $this->global['active_menu'] = 'message'; 
            
            $this->loadViews("Booking/AllMessage", $this->global, $data, NULL);
        }
    }
	public function Message(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();      
			$data['driverList'] = $this->Booking_model->GetDriverList();   
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Driver Message';
            $this->global['active_menu'] = 'message'; 
            
            $this->loadViews("Booking/Message", $this->global, $data, NULL);
        }
    }
	function SendDriverMessage()
    {
        if($this->isEdit == 0)
        {
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
		
			$IDS = $this->security->xss_clean($this->input->post('IDS')); 
			$Message = $this->security->xss_clean($this->input->post('Message')); 
			$Id = explode(',',$IDS);	
			for($i=0;$i<count($Id);$i++){
				$MessageInfo = array('DriverID'=> $Id[$i], 'Status'=>0 , 'Message'=> $Message ); 
				$result1 = $this->Common_model->insert("tbl_driver_message",$MessageInfo);  
			}  
			$this->Fcm_model->sendNotication($IDS,$Message,'message');
            //if ($result1 > 0) { 
				echo(json_encode(array('status'=>TRUE,'result'=>$result1))); 
			//}else{ 
			//	echo(json_encode(array('status'=>FALSE,'result'=>$result1))); 
			//}
        }
    }
	
	public function AjaxMessage(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetLoadsMessage();   
		$this->ajax->send($data);
	}
	public function AjaxAllocatedBookings(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocatedBookingData();   
		$this->ajax->send($data);
	}
	public function AjaxAllocatedBookings2(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocatedBookingData2();   
		$this->ajax->send($data);
	}
	public function AjaxAllocatedBookings3(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocatedBookingData3();   
		$this->ajax->send($data);
	}
	public function AjaxAllocatedBookings1(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocatedBookingData1();   
		$this->ajax->send($data);
	}
	public function AjaxLoads(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetLoadsData();   
		$this->ajax->send($data);
	}
	public function AjaxContractorLoads(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetContractorLoadsData();   
		$this->ajax->send($data);
	}
	public function AjaxNonAppsLoads(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetNonAppsLoadsData();   
		$this->ajax->send($data);
	}
	
	public function AjaxSubcontractorLoads(){  
		$this->load->library('ajax');
		$ContractorID = $this->input->post('ContractorID');
		$data = $this->Booking_model->GetSubcontractorLoadsData($ContractorID);   
		$this->ajax->send($data);
	}
	
	public function AjaxLoads1(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetLoadsData1();  
		$this->ajax->send($data);
	}
	
	public function AjaxLoads2(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetLoadsData2();  
		$this->ajax->send($data);
	}
	
	public function AjaxConveyanceTickets(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetConveyanceTickets();  
		$this->ajax->send($data);
	}
	
	function ConveyanceTicketsTableMeta(){
        echo '{"Name":"Conveyance","Action":true,"Column":[{"Name":"ConveyanceNo","Title":"Conv No","Searchable":true,"Class":null},{"Name":"BookingType","Title":"Type","Searchable":true,"Class":null},{"Name":"SiteOutDateTime1","Title":"DateTime","Searchable":true,"Class":null},{"Name":"CompanyName","Title":"Company Name","Searchable":true,"Class":null},{"Name":"OpportunityName","Title":"Site Address","Searchable":true,"Class":null},{"Name":"MaterialName","Title":"Material","Searchable":true,"Class":null},{"Name":"DriverName","Title":"Driver Name","Searchable":true,"Class":null},{"Name":"VehicleRegNo","Title":"VRNO","Searchable":true,"Class":null}]}'; 
    } 
	public function AjaxBookings(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetBookingData();  
		//echo "<PRE>";
		//print_r($data);
		//echo "</PRE>";
		//exit;
		$this->ajax->send($data);
	}
	
	function GetDriverList(){ 
		$result['driver_list'] = $this->Booking_model->LorryListAJAX() ; 
		if ($result > 0) { echo(json_encode($result)); }
		else { echo(json_encode(array('status'=>FALSE))); } 
    }
	
	function GetTipList(){ 
		$result['tip_list'] = $this->Booking_model->TipListAJAX() ; 
		if ($result > 0) { echo(json_encode($result)); }
		else { echo(json_encode(array('status'=>FALSE))); } 
    }
 
    function AddBooking(){
        if($this->isAdd == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();           
			
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 

				
				$this->load->library('form_validation'); 
				$this->form_validation->set_rules('BookingType','Booking Type','trim|required');
				$this->form_validation->set_rules('BookingDateTime','Booking Date Time','trim|required');  
				$this->form_validation->set_rules('CompanyID','Company Name','trim|required');
				$this->form_validation->set_rules('OpportunityID','Opportunity ','trim|required');  
				$this->form_validation->set_rules('ContactID','Contact','trim|required');  
				$this->form_validation->set_rules('DescriptionofMaterial','Material','trim|required');   
				$this->form_validation->set_rules('ContactMobile','Site Contact Mobile','trim|required');   
				//$this->form_validation->set_rules('Email','Site Contact Email ','trim|required|valid_email|max_length[255]');     
				
				if($this->form_validation->run()){ 
				 
					$BookingType	 = $this->security->xss_clean($this->input->post('BookingType')); 
					$BookingDateTime = $this->security->xss_clean($this->input->post('BookingDateTime'));
					$CompanyID = $this->security->xss_clean($this->input->post('CompanyID')); 
					$CompanyName = $this->security->xss_clean($this->input->post('CompanyName'));
					
					$OpportunityID = $this->security->xss_clean($this->input->post('OpportunityID'));                   
					$Street1 = $this->security->xss_clean($this->input->post('Street1'));
					$County = $this->security->xss_clean($this->input->post('County'));
					$Town = $this->security->xss_clean($this->input->post('Town'));
					$PostCode = $this->security->xss_clean($this->input->post('PostCode'));
					
					$ContactID = $this->security->xss_clean($this->input->post('ContactID')); 
					$ContactName = $this->security->xss_clean($this->input->post('ContactName')); 
					
					$DescriptionofMaterial = $this->security->xss_clean($this->input->post('DescriptionofMaterial'));
					   
					$PurchaseOrderNumber = $this->security->xss_clean($this->input->post('PurchaseOrderNumber'));
					$LorryType = $this->security->xss_clean($this->input->post('LorryType'));
					
					$Price = $this->security->xss_clean($this->input->post('Price'));
					$PriceBy = $this->security->xss_clean($this->input->post('PriceBy'));
					
					$WaitingCharge = $this->security->xss_clean($this->input->post('WaitingCharge'));
					$WaitingTime = $this->security->xss_clean($this->input->post('WaitingTime'));
					
					$LoadType = $this->security->xss_clean($this->input->post('LoadType'));
					$Loads = $this->security->xss_clean($this->input->post('Loads'));
					//$Days = $this->security->xss_clean($this->input->post('Days'));
					
					$ContactName = $this->security->xss_clean($this->input->post('ContactName'));
					$ContactMobile = $this->security->xss_clean($this->input->post('ContactMobile'));
					$Email = $this->security->xss_clean($this->input->post('Email'));
					$Notes = $this->security->xss_clean($this->input->post('Notes')); 
 
				   
					if($CompanyID == '0' ){
						if(trim($CompanyName) == '' ){
							$this->session->set_flashdata('error', 'Company Name Must Not be blank');                
							redirect('Bookings');
						}		
						$CompanyID = $this->generateRandomString();
						$CompanyInfo = array('CompanyID'=>$CompanyID,'CompanyIDMapKey'=>$CompanyID, 'CompanyName'=>$CompanyName,'status'=>1,'CreateDate'=>date('Y-m-d H:i:s')); 
						$this->Common_model->insert("tbl_company",$CompanyInfo);
					}	 
					if($OpportunityID == '0'){    
						if(trim($Street1) == '' && trim($Town) == '' && trim($County) == '' && trim($PostCode) == ''  ){
							$this->session->set_flashdata('error', 'Opportunity Must Not be blank');                
							redirect('Bookings');
						}		 
						$OpportunityID = $this->generateRandomString(); 
						$OpportunityName = $Street1.", ".$Town.", ".$County.", ".$PostCode;
						$OppoInfo = array('OpportunityID'=>$OpportunityID,'OpportunityIDMapKey'=>$OpportunityID,'OpportunityName'=>$OpportunityName, 
						'Street1'=>$Street1,'Town'=>$Town ,'County'=>$County ,'PostCode'=>$PostCode); 
						$this->Common_model->insert("tbl_opportunities",$OppoInfo);
						
						$CO = array('OpportunityID'=>$OpportunityID, 'CompanyID'=>$CompanyID ); 
						$this->Common_model->insert("tbl_company_to_opportunities", $CO); 
					}
					if($ContactID == '0'){   
						if(trim($ContactName) == '' ){
							$this->session->set_flashdata('error', 'Contact Name Must Not be blank');                
							redirect('Bookings');
						}
						$ContactID = $this->generateRandomString();  
						$ConInfo = array('ContactID'=>$ContactID,'ContactIDMapKey'=>$ContactID,'ContactName'=>$ContactName,'MobileNumber'=>$ContactMobile,'EmailAddress'=>$Email); 
						$this->Common_model->insert("tbl_contacts",$ConInfo);
						
						$OC = array('OpportunityID'=>$OpportunityID, 'ContactID'=>$ContactID ); 
						$this->Common_model->insert("tbl_opportunity_to_contact", $OC); 
					}else{
						$ConInfo = array('ContactName'=>$ContactName,'MobileNumber'=>$ContactMobile,'EmailAddress'=>$Email);  
						$cond = array( 'ContactID' => $ContactID); 
						$this->Common_model->update("tbl_contacts",$ConInfo, $cond); 
					}	
					
					$BID = $this->generateRandomString();    
 					
					$BookingInfo = array('BID' => $BID, 'BookingType'=>$BookingType, 'CompanyID'=>$CompanyID , 
					'OpportunityID'=>$OpportunityID, 'ContactID'=>$ContactID , 
					'MaterialID'=>$DescriptionofMaterial ,'PurchaseOrderNumber'=>$PurchaseOrderNumber ,
					'Price'=>$Price ,'PriceBy'=>$PriceBy ,'WaitingCharge'=>$WaitingCharge , 'WaitingTime'=>$WaitingTime , 
					'LorryType'=>$LorryType , 'Days'=>1 ,
					'Loads'=>$Loads,'LoadType'=>$LoadType ,'Email'=>$Email , 'ContactName'=>$ContactName , 'ContactMobile'=>$ContactMobile , 
					'Notes'=>$Notes , 'BookedBy'=>$this->session->userdata['userId'] );

					$ins_id = $this->Common_model->insert("booking",$BookingInfo);
					if($ins_id){ 
						$BDT = explode(',',$BookingDateTime); 
						$BookingDate = array();
						for($i=0;$i<count($BDT);$i++){
							$B = explode('/',$BDT[$i]);
							$BookingDate[$i] = $B[2]."-".$B[1]."-".$B[0] ; 
						}	  
						sort($BookingDate); 
						for($i=0;$i<count($BookingDate);$i++){ 
							$BookingInfo1 = array('BookingID' => $ins_id, 'BookingDate'=> $BookingDate[$i] ); 
							$this->Common_model->insert("tbl_booking_date", $BookingInfo1);	   
						}
						if($Price!='' || $Price !=0){ 
							$ProductInfo = array('OpportunityID'=>$OpportunityID, 'MaterialID'=>$DescriptionofMaterial,  
							'DateRequired'=>$BookingDate[0] ,'UnitPrice'=>$Price ,'PurchaseOrderNo'=>$PurchaseOrderNumber , 
							'CreateUserID'=>$this->session->userdata['userId'],'EditUserID'=>$this->session->userdata['userId']);         
							$this->Common_model->insert("tbl_product", $ProductInfo);	   
						}	
						$this->session->set_flashdata('success', 'Booking has been Added successfully');                 
					}else{
						$this->session->set_flashdata('error', 'Oooops ... Something Error, Please Try Again Later. ');                 
					}
					redirect('Bookings');
				}
			}
			 
			$data['company_list'] = $this->Common_model->CompanyList();
			$data['ApprovalUserList'] = $this->Common_model->ApprovalUserList(); 
			
            $data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1)); 
			$data['county'] = $this->Common_model->get_all('county'); 
			$this->global['pageTitle'] =  WEB_PAGE_TITLE.' : ADD Booking';
            $this->global['active_menu'] = 'addbooking'; 

            $this->loadViews("Booking/AddBooking", $this->global, $data, NULL);
        }
    }
	 
	function getCompanyList(){ 
			$result['company_list'] = $this->Common_model->CompanyListAJAX() ; 
            if ($result > 0) { echo(json_encode($result)); }
            else { echo(json_encode(array('status'=>FALSE))); } 
    }
	 
	
    function EditBooking($BookingID){   
    	if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            if($BookingID == null){ redirect('Bookings'); }          
            
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 
			
				$this->load->library('form_validation'); 
				$this->form_validation->set_rules('BookingType','Booking Type','trim|required');
				$this->form_validation->set_rules('BookingDateTime','Booking Date Time','trim|required');   
				$this->form_validation->set_rules('DescriptionofMaterial','Material','trim|required');    
				$this->form_validation->set_rules('CompanyID','Company Name','trim|required');
				$this->form_validation->set_rules('OpportunityID','Opportunity ','trim|required');  
				$this->form_validation->set_rules('ContactID','Contact','trim|required');  
				$this->form_validation->set_rules('ContactMobile','Site Contact Mobile','trim|required');   
				//$this->form_validation->set_rules('Email','Site Contact Email ','trim|required|valid_email|max_length[255]');   
				 
				if($this->form_validation->run()){ 
				 
					$BookingID	 = $this->security->xss_clean($this->input->post('BookingID')); 
					$BookingType	 = $this->security->xss_clean($this->input->post('BookingType')); 
					$BookingDateTime = $this->security->xss_clean($this->input->post('BookingDateTime'));  
					$DescriptionofMaterial = $this->security->xss_clean($this->input->post('DescriptionofMaterial')); 
					$PurchaseOrderNumber = $this->security->xss_clean($this->input->post('PurchaseOrderNumber'));
					$Price = $this->security->xss_clean($this->input->post('Price'));
					$PriceBy = $this->security->xss_clean($this->input->post('PriceBy'));
					
					$WaitingCharge = $this->security->xss_clean($this->input->post('WaitingCharge'));
					$WaitingTime = $this->security->xss_clean($this->input->post('WaitingTime'));
					
					$LorryType = $this->security->xss_clean($this->input->post('LorryType'));
					$Loads = $this->security->xss_clean($this->input->post('Loads'));
					//$Days = $this->security->xss_clean($this->input->post('Days')); 
					$LoadType = $this->security->xss_clean($this->input->post('LoadType')); 
					$ContactName = $this->security->xss_clean($this->input->post('ContactName'));
					$ContactMobile = $this->security->xss_clean($this->input->post('ContactMobile'));
					$Email = $this->security->xss_clean($this->input->post('Email')); 
					$Notes = $this->security->xss_clean($this->input->post('Notes'));  
					
					$CompanyID = $this->security->xss_clean($this->input->post('CompanyID'));  
					$OpportunityID = $this->security->xss_clean($this->input->post('OpportunityID'));                     
					$ContactID = $this->security->xss_clean($this->input->post('ContactID')); 
					$ContactName = $this->security->xss_clean($this->input->post('ContactName'));
					$ContactMobile = $this->security->xss_clean($this->input->post('ContactMobile'));
					$Email = $this->security->xss_clean($this->input->post('Email'));
					
					
					$BookingInfo = array('PurchaseOrderNumber'=>$PurchaseOrderNumber ,'MaterialID'=>$DescriptionofMaterial ,
					'BookingType'=>$BookingType ,'LoadType'=>$LoadType ,'Price'=>$Price ,'PriceBy'=>$PriceBy ,'WaitingCharge'=>$WaitingCharge , 'WaitingTime'=>$WaitingTime , 
					'Days'=>1 , 'Loads'=>$Loads, 'Email'=>$Email , 'ContactName'=>$ContactName , 'ContactMobile'=>$ContactMobile , 'LorryType'=>$LorryType ,
					'CompanyID'=>$CompanyID , 'OpportunityID'=>$OpportunityID, 'ContactID'=>$ContactID ,  
					'Notes'=>$Notes , 'UpdatedBy'=>$this->session->userdata['userId'] );
					  
					$cond = array( 'BookingID' => $BookingID  ); 
					//$cond = array( 'BookingID' => $BookingID,'Status' => 0  );  // Temporary 
					$this->Common_model->update("booking",$BookingInfo, $cond);
					 	
					$Delte_Where = array( 'BookingID' => $BookingID);  
					$this->Common_model->delete("tbl_booking_date",$Delte_Where);	   	
					
					$BDT = explode(',',$BookingDateTime); 
					$BookingDate = array();
					for($i=0;$i<count($BDT);$i++){
						$B = explode('/',$BDT[$i]);
						$BookingDate[$i] = $B[2]."-".$B[1]."-".$B[0] ; 
					}	  
					sort($BookingDate); 
					 
					for($i=0;$i<count($BookingDate);$i++){ 
						$BookingInfo1 = array('BookingID' => $BookingID, 'BookingDate'=> $BookingDate[$i] ); 
						$this->Common_model->insert("tbl_booking_date", $BookingInfo1);	   
					} 
					   
					$this->session->set_flashdata('success', 'Booking has been updated successfully');                
					redirect('Bookings');
				}
			}
			
			
            $conditions = array( 'BookingID' => $BookingID );
            $data['bookings'] = $this->Booking_model->BookingData($BookingID);  
			$data['booking_date'] = $this->Booking_model->GetBookingDate($BookingID);
			$data['booking_dateCSV']="";
			for($i=0;$i<count($data['booking_date']);$i++){    
				if($i!=0){ $data['booking_dateCSV'] .= ","; }
				$B = explode('-',$data['booking_date'][$i]->BookingDate); 
				$data['booking_dateCSV'] .= $B[0]."/".$B[1]."/".$B[2]; 
			} 
			$data['company_list'] = $this->Common_model->CompanyList();
            $data['opprtunities'] = $this->Booking_model->getAllOpportunitiesByCompany($data['bookings']['CompanyID']) ;
			$data['contacts'] = $this->Booking_model->getContactsByOpportunity($data['bookings']['OpportunityID']) ;  
		
            //print_r($data['SiteAddress']); die;           
			if($data['bookings']['BookingType'] ==1){  $type = 'IN'; }
			if($data['bookings']['BookingType'] ==2){  $type = 'OUT'; }
	    
	        $Material = $this->Booking_model->getMaterialList($type);
	        $data['Material']=$Material;
			
			$data['ApprovalUserList'] = $this->Common_model->ApprovalUserList(); 
			
			$data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1));
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Edit Booking';
            $this->global['active_menu'] = 'editbooking'; 
            
            $this->loadViews("Booking/EditBooking", $this->global, $data, NULL);
		//	$this->output->enable_profiler(TRUE);

        }
    } 
  
	function ApproveBooking()
    {
        if($this->isEdit == 0)
        {
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }
        else
        {  
            $BookingID = $this->input->post('BookingNo'); 
				
            $con = array('BookingID'=>$BookingID);  
			$BookingInfo = array('Status'=>'1' , 'ApprovedBy'=> $this->session->userdata['userId'],  'UpdatedBy'=> $this->session->userdata['userId']); 
            $result = $this->Common_model->update("booking",$BookingInfo, $con); 
			 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE,'BookingID'=>$BookingID))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }
	

	function AllocateBookingAJAX(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID = $this->input->post('BookingID');  
			$BookingDateID = $this->input->post('BookingDateID');  
			$BookingDate = $this->input->post('BookingDate');  
			$DriverID = $this->input->post('DriverID'); 
			$TipID = $this->input->post('TipID'); 
			$Qty = $this->input->post('Qty'); 
			$MaterialID = $this->input->post('MaterialID'); 
			$AllocatedDateTime = $this->input->post('AllocatedDateTime'); 
			$Loads = $this->input->post('Loads'); 
			$TotalLoads = $this->input->post('TotalLoads'); 
			$LID = $this->generateRandomString();     
			if($AllocatedDateTime==""){ $AllocatedDateTime = date('Y-m-d H:i:s'); }
			
			$Booking = $this->Booking_model->GetBookingInfo($BookingID);   
			$Driver = $this->Booking_model->getLorryNoDetails($DriverID); 
			$j=0;		
			for($i=1;$i<=$Qty;$i++){
				if($Booking->BookingType==1){ 
					$AllocatedLoads = $this->Common_model->CountLoads($BookingDateID); 
					//$cond = array( 'BookingDateID' => $BookingDateID);
					//$AllocatedLoads = $this->Common_model->select_count_where('tbl_booking_loads',$cond); 
				}
				if($Booking->BookingType==2){
					$AllocatedLoads = $this->Common_model->CountLorry($BookingDateID); 
				}
				if($TotalLoads != $AllocatedLoads){
			 
					$TicketID = 0;	 $TicketUniqueID = "";
					if($Booking->BookingType==2){
						//echo json_encode($Driver);
						if($TipID==1){
							if($Driver->AppUser==0){
								$TicketUniqueID = $this->generateRandomString();                
								$TicketNumber = 1;
								$LastTicketNumber =  $this->Booking_model->LastTicketNo(); 
								if($LastTicketNumber){ 
									$TicketNumber = $LastTicketNumber['TicketNumber']+1;  
								}  
								
								$ticketsInfo = array('TicketUniqueID'=>$TicketUniqueID, 'TicketNumber'=>$TicketNumber, 'TicketDate'=>date('Y-m-d H:i:s'), 
								'OpportunityID'=> $Booking->OpportunityID, 'CompanyID'=>$Booking->CompanyID ,'DriverName'=>$Driver->DriverName, 
								'RegNumber'=>$Driver->RegNumber ,'Hulller'=>$Driver->Haulier ,'Tare'=>$Driver->Tare ,'driversignature'=>$Driver->ltsignature , 'driver_id'=>$DriverID, 
								'MaterialID'=>$Booking->MaterialID ,'SicCode'=>$Booking->SicCode,  
								'CreateDate'=>date('Y-m-d H:i:s'),'TypeOfTicket'=>'Out', 'is_hold'=>1 ); 
								$TicketID = $this->Common_model->insert('tbl_tickets', $ticketsInfo); 					
							}
						}
						
					}
					################################################
					
					$LastConNumber =  $this->Booking_model->LastConNumber(); 
					if($LastConNumber){  
						$ConveyanceNo = $LastConNumber['ConveyanceNo']+1;  
					}else{
						$data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1));  
						$ConveyanceNo = $data['content']['ConveyanceStart']; 
					}   
					$result1="";
					if($Driver->AppUser==1){ $status = 1; if($Driver->RegNumber!=""){ $RegNumber = $Driver->RegNumber; }else{ $RegNumber = $Driver->ContractorLorryNo;  }
					}else{ $status = 0; $RegNumber = $Driver->RegNumber ; }
					
					$LoadInfo = array('LID' => $LID, 'BookingID'=>$BookingID,'BookingDateID'=>$BookingDateID, 'ConveyanceNo'=>$ConveyanceNo, 
					'TicketID'=>$TicketID,  'TicketUniqueID'=>$TicketUniqueID, 'DriverID'=>$DriverID ,'DriverLoginID'=>$Driver->DriverID , 
					'DriverName'=>$Driver->DriverName, 'VehicleRegNo' =>$RegNumber , 
					'MaterialID'=>$MaterialID ,'AllocatedDateTime'=>$AllocatedDateTime , 'TipID'=>$TipID , 
					'Status'=> $status ,'AutoCreated'=> 1 , 'CreatedBy'=>$this->session->userdata['userId'] ); 
					$result1 = $this->Common_model->insert("tbl_booking_loads",$LoadInfo);  
					
					$Message = 'New load has been allocated';
					$this->Fcm_model->sendNotication($DriverID,$Message,'noti');
					
					if($Booking->BookingType==2){
						$ticketsInfo1 = array('LoadID'=>$result1, 'Conveyance'=>$ConveyanceNo, );   
						$cond = array( 'TicketNo' => $TicketID ); 
						$this->Common_model->update("tbl_tickets" , $ticketsInfo1, $cond); 
					}	
					if($result1> 0) {   $j=$j+1; }
					################################################ 
					
				}else{ 
					echo(json_encode(array('status'=>FALSE,))); 
				}	  
			} // For 
			
			if($j>0) {   
				if((int)$Loads>0){ (int)$Loads = (int)$Loads-$j; }else{ (int)$Loads = 0; } 
				$data['Loads'] = $this->Booking_model->ShowBookingDateLoads($BookingDateID);  
				$ShowLoads=$this->load->view('Booking/AllAllocatedAJAX', $data, true);
				echo( json_encode(array('status'=>TRUE, 'ShowLoads'=>$ShowLoads, 'loads'=>$Loads,'Alloloads'=>$j,'BookingType'=>$Booking->BookingType,'LoadType'=>$Booking->LoadType,'BookingDateID'=>$BookingDateID,'BookingDate'=>$BookingDate  )) ); 
			}else { 
				echo(json_encode(array('status'=>FALSE))); 
			}
			 
        }
    }
	
	/* OLD Allocate Booking Copy function AllocateBookingAJAX(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID = $this->input->post('BookingID');  
			$BookingDateID = $this->input->post('BookingDateID');  
			$BookingDate = $this->input->post('BookingDate');  
			$DriverID = $this->input->post('DriverID'); 
			$TipID = $this->input->post('TipID'); 
			$Qty = $this->input->post('Qty'); 
			$MaterialID = $this->input->post('MaterialID'); 
			$AllocatedDateTime = $this->input->post('AllocatedDateTime'); 
			$Loads = $this->input->post('Loads'); 
			$TotalLoads = $this->input->post('TotalLoads'); 
			$LID = $this->generateRandomString();     
			if($AllocatedDateTime==""){ $AllocatedDateTime = date('Y-m-d H:i:s'); }
			
			$Booking = $this->Booking_model->GetBookingInfo($BookingID);   
			$Driver = $this->Booking_model->getLorryNoDetails($DriverID); 
			$j=0;		
			for($i=1;$i<=$Qty;$i++){
				if($Booking->BookingType==1){ 
					$AllocatedLoads = $this->Common_model->CountLoads($BookingDateID); 
					//$cond = array( 'BookingDateID' => $BookingDateID);
					//$AllocatedLoads = $this->Common_model->select_count_where('tbl_booking_loads',$cond); 
				}
				if($Booking->BookingType==2){
					$AllocatedLoads = $this->Common_model->CountLorry($BookingDateID); 
				}
				if($TotalLoads != $AllocatedLoads){
			 
					$TicketID = 0;	 $TicketUniqueID = "";
					if($Booking->BookingType==2){
						//echo json_encode($Driver);
						if($Driver->AppUser==0){
							$TicketUniqueID = $this->generateRandomString();                
							$TicketNumber = 1;
							$LastTicketNumber =  $this->Booking_model->LastTicketNo(); 
							if($LastTicketNumber){ 
								$TicketNumber = $LastTicketNumber['TicketNumber']+1;  
							}  
							
							$ticketsInfo = array('TicketUniqueID'=>$TicketUniqueID, 'TicketNumber'=>$TicketNumber, 'TicketDate'=>date('Y-m-d H:i:s'), 
							'OpportunityID'=> $Booking->OpportunityID, 'CompanyID'=>$Booking->CompanyID ,'DriverName'=>$Driver->DriverName, 
							'RegNumber'=>$Driver->RegNumber ,'Hulller'=>$Driver->Haulier ,'Tare'=>$Driver->Tare ,'driversignature'=>$Driver->ltsignature , 'driver_id'=>$DriverID, 
							'MaterialID'=>$Booking->MaterialID ,'SicCode'=>$Booking->SicCode, 'CreateUserID'=>$this->session->userdata['userId'] ,
							'CreateDate'=>date('Y-m-d H:i:s'),'TypeOfTicket'=>'Out', 'is_hold'=>1 ); 
							$TicketID = $this->Common_model->insert('tbl_tickets', $ticketsInfo); 					
						}
						
					}
					################################################
					
					$LastConNumber =  $this->Booking_model->LastConNumber(); 
					if($LastConNumber){  
						$ConveyanceNo = $LastConNumber['ConveyanceNo']+1;  
					}else{
						$data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1));  
						$ConveyanceNo = $data['content']['ConveyanceStart']; 
					}   
					$result1="";
					if($Driver->AppUser==1){ $status = 1; $RegNumber = $Driver->ContractorLorryNo; $DriverName = $Driver->DriverName;  
					}else{ $status = 0; $RegNumber = ""; $DriverName = "";   }
					
					$LoadInfo = array('LID' => $LID, 'BookingID'=>$BookingID,'BookingDateID'=>$BookingDateID, 'ConveyanceNo'=>$ConveyanceNo, 
					'TicketID'=>$TicketID,  'TicketUniqueID'=>$TicketUniqueID, 'DriverID'=>$DriverID ,'DriverLoginID'=>$Driver->DriverID , 
					'DriverName'=>$DriverName , 'VehicleRegNo' =>$RegNumber , 
					'MaterialID'=>$MaterialID ,'AllocatedDateTime'=>$AllocatedDateTime , 'TipID'=>$TipID , 
					'Status'=> $status ,'AutoCreated'=> 1 , 'CreatedBy'=>$this->session->userdata['userId'] ); 
					$result1 = $this->Common_model->insert("tbl_booking_loads",$LoadInfo);  
					
					$Message = 'New load has been allocated';
					$this->Fcm_model->sendNotication($DriverID,$Message,'noti');
					
					if($Booking->BookingType==2){
						$ticketsInfo1 = array('LoadID'=>$result1, 'Conveyance'=>$ConveyanceNo, );   
						$cond = array( 'TicketNo' => $TicketID ); 
						$this->Common_model->update("tbl_tickets" , $ticketsInfo1, $cond); 
					}	
					if($result1> 0) {   $j=$j+1; }
					################################################ 
					
				}else{ 
					echo(json_encode(array('status'=>FALSE,))); 
				}	  
			} // For 
			
			if($j>0) {   
				if((int)$Loads>0){ (int)$Loads = (int)$Loads-$j; }else{ (int)$Loads = 0; } 
				echo( json_encode(array('status'=>TRUE,'loads'=>$Loads,'Alloloads'=>$j,'BookingType'=>$Booking->BookingType,'LoadType'=>$Booking->LoadType,'BookingDateID'=>$BookingDateID,'BookingDate'=>$BookingDate  )) ); 
			}else { 
				echo(json_encode(array('status'=>FALSE))); 
			}
			
			################################################
			
			
            
        }
    } */
	
	
	
	
	
	/* function AllocateBookingAJAX(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID = $this->input->post('BookingID');  
			$DriverID = $this->input->post('DriverID'); 
			$TipID = $this->input->post('TipID'); 
			$MaterialID = $this->input->post('MaterialID'); 
			$Loads = $this->input->post('Loads'); 
			$TotalLoads = $this->input->post('TotalLoads'); 
			$LID = $this->generateRandomString();     
			
			$cond = array( 'BookingID' => $BookingID);
			$AllocatedLoads = $this->Common_model->select_count_where('tbl_booking_loads',$cond); 
			
			if($TotalLoads != $AllocatedLoads){
				$LoadInfo = array('LID' => $LID, 'BookingID'=>$BookingID, 'DriverID'=>$DriverID , 'MaterialID'=>$MaterialID , 'TipID'=>$TipID , 
				'Status'=> 0 , 'CreatedBy'=>$this->session->userdata['userId'] );
				
				$result = $this->Common_model->insert("tbl_booking_loads",$LoadInfo); 
				if ($result > 0) { if($Loads>0){ $Loads = $Loads-1; }else{ $Loads = 0; } echo(json_encode(array('status'=>TRUE,'loads'=>$Loads,'totalloads'=>$TotalLoads,'BookingID'=>$BookingID))); }
				else { echo(json_encode(array('status'=>FALSE))); }
			}else{ 
				echo(json_encode(array('status'=>FALSE))); 
			}	
            
        }
    } */
	
	function ShowLoadsAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
			$BookingDateID = $this->input->post('BookingDateID');    
			 
			//$data['Loads'] = $this->Booking_model->ShowLoads($BookingID); 
			$data['Loads'] = $this->Booking_model->ShowBookingDateLoads($BookingDateID); 
			//var_dump($data['Loads']);
			//exit; 
			$html = $this->load->view('Booking/LoadInfoAjax', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowBLoadsAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
			$BookingID = $this->input->post('BookingID');    
			 
			$data['Loads'] = $this->Booking_model->ShowLoads($BookingID); 
			//$data['Loads'] = $this->Booking_model->ShowBookingDateLoads($BookingDateID); 
			//var_dump($data['Loads']);
			//exit; 
			$html = $this->load->view('Booking/LoadInfoAjax', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowLoadsAJAX1(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingDateID = $this->input->post('BookingDateID');    
			$LoadType = $this->input->post('LoadType');    
			if($LoadType==1){ 
				$data['Loads'] = $this->Booking_model->ShowLoads1($BookingDateID); 
			}
			if($LoadType==2){ 
				$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID); 
			}
			//var_dump($data['Loads']);
			//exit; 
			$html = $this->load->view('Booking/LoadInfoAjax1', $data, true);  
			echo json_encode($html); 
        }
    }
	
	function ShowLoadsDeleteBookingAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $data['BookingDateID'] = $this->input->post('BookingDateID');      
			$data['PendingLoads'] = $this->input->post('PendingLoads');      
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			$html = $this->load->view('Booking/ShowLoadsDeleteBookingAJAX', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowLoadsDeleteBookingAJAXPOST(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingDateID  = $this->input->post('BookingDateID');      
			$CancelLoads = $this->input->post('CancelLoads');      
			$PendingLoads = $this->input->post('PendingLoads'); 
			$CancelNote = $this->input->post('CancelNote');    
			$LoadInfo = array('BookingDateStatus'=>1,'CancelLoads'=>$CancelLoads,'CancelNote'=>$CancelNote);
			$LoadCond = array('BookingDateID'=>$BookingDateID);            
            
			$result = $this->Common_model->update("tbl_booking_date",$LoadInfo, $LoadCond);  
			redirect('AllocateBookings');
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			  
        }
    }
	function ShowUpdateBookingAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $data['BookingID'] = $this->input->post('BookingID');      
			$data['PendingLoads'] = $this->input->post('PendingLoads');      
			$data['TotalLoads'] = $this->input->post('TotalLoads');      
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			$html = $this->load->view('Booking/ShowUpdateBookingAJAX', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowUpdateBookingAJAXPOST(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID  = $this->input->post('BookingID');      
			$Loads = $this->input->post('Loads');      
			 
			$LoadInfo = array('Loads'=>$Loads);
			$LoadCond = array('BookingID'=>$BookingID);            
            
			$result = $this->Common_model->update("tbl_booking",$LoadInfo, $LoadCond);  
			redirect('AllocateBookings');
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			  
        }
    }
	
	function ShowOppoProductPriceAJAX(){
	 
		$OpportunityID = $this->input->post('OpportunityID');      
		$MaterialID = $this->input->post('MaterialID');      
		$DateRequired = $this->input->post('DateRequired');        
		
		$ProductPrice = $this->Booking_model->GetOppoMaterialListDetails($OpportunityID,$MaterialID,$DateRequired); 
		//var_dump($ProductPrice); 
		//exit; 
		
		echo( json_encode(array('Price'=>trim($ProductPrice[0]->UnitPrice),'PurchaseOrderNo'=>trim($ProductPrice[0]->PurchaseOrderNo),'PriceDate'=>trim($ProductPrice[0]->PriceDate) ) ) ); 		 
	
    }
	
	
	
	function AJAXShowLoadsDetails(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID  = $this->input->post('LoadID');    
			 
			$data['Loads'] = $this->Booking_model->ShowLoadDetails($LoadID); 
			$data['Photos'] = $this->Booking_model->ShowLoadPhotos($LoadID); 
			
			//var_dump($data['Loads']);
			//exit; 
			//echo json_encode(var_dump($data['Loads'])); 
			//exit;
			//$html =  $LoadID." ==== ";
			//$html .=  var_dump($data['Loads']);
			//$html .=  var_dump($data['Photos']);
			$html = $this->load->view('Booking/AJAXLoadTimeline', $data, true);  
			echo json_encode($html); 
        }
    }
	
	function AJAXShowRequestLoadsDetails(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID  = $this->input->post('LoadID');    
			 
			$data['Loads'] = $this->Booking_model->ShowRequestLoadDetails($LoadID); 
			$data['Photos'] = $this->Booking_model->ShowRequestLoadPhotos($LoadID); 
			
			//var_dump($data['Loads']);
			//exit; 
			//echo json_encode(var_dump($data['Loads'])); 
			//exit;
			//$html =  $LoadID." ==== ";
			//$html .=  var_dump($data['Loads']);
			//$html .=  var_dump($data['Photos']);
			$html = $this->load->view('Booking/AJAXRequestLoadTimeline', $data, true);  
			echo json_encode($html); 
        }
    }
	
    function DeleteBooking(){
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID = $this->input->post('BookingNo');  
            $con = array('BookingID'=>$BookingID);            
            $result = $this->Common_model->delete('booking', $con); 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    } 
	
	function DeleteBookingRequest(){
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingDateID  = $this->input->post('BookingDateID');  
			 
            $con = array('BookingDateID '=>$BookingDateID );            
            $result = $this->Common_model->delete('tbl_booking_date1', $con); 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    } 
	
	public function DriverLoads(){ 
        $data=array();  
		if($this->input->post('search')){
			$driver = $this->input->post('driver'); 
			$searchdate = $this->input->post('searchdate');  
			$data['searchdate'] = $searchdate;
			$data['DriverLoadsCollection'] = $this->Booking_model->GetDriverLoadsCollection($searchdate,$driver);  
			$data['DriverLoadsDelivery'] = $this->Booking_model->GetDriverLoadsDelivery($searchdate,$driver);  
			$data['DriverDetails'] = $this->Booking_model->GetDriverLoginDetails($driver);  			
		}	
		
		$data['DriverList'] = $this->Booking_model->DriverLoginList(); 
        $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Driver Loads Reports';
        $this->global['active_menu'] = 'driverloads';
        $this->loadViews("Booking/DriverLoads", $this->global, $data, NULL);
    }
	
    function DeleteLoad(){
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID = $this->input->post('LoadID');  
            $con = array('LoadID'=>$LoadID,'Status'=>'0');            
            $result = $this->Common_model->delete('booking_loads', $con); 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }
	function CancelLoad()
    {
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID = $this->input->post('LoadID');  
			$Notes = $this->input->post('confirmation');  
			
			$ticketsInfo = array('Status'=>'5','CancelNote'=>$Notes);
			$con = array('LoadID'=>$LoadID);            
            $result = $this->Common_model->update("booking_loads",$ticketsInfo, $con); 
			
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }	
  
    function pageNotFound()
    {
        $this->global['pageTitle'] = WEB_PAGE_TITLE.' : 404 - Page Not Found';
        
        $this->loadViews("404", $this->global, NULL, NULL);
    } 
    function getMaterialList(){
        $type = $_POST['TicketType'];
        if($type=='In'){
        	$type='IN';
        }else{$type='OUT';}
        $result = $this->tickets_model->getMaterialList($type);
        $html='<option value="">-- Select material type--</option>';
        foreach ($result as $key => $value) {
           $html.="<option value='".$value->MaterialID."'>".$value->MaterialName."</option>";
        }
        echo $html;
  
    } 
    function getMaterialListDetails(){

        if($_POST){
             $id = $_POST['id'];
             $result = $this->tickets_model->getMaterialListDetails($id);
             $aray=array();
             if($result){
                $SicCode  = $result->SicCode;
                $price  = $result->price;
                $aray = array('SicCode' =>$SicCode ,'price'=>$price);
             }
             echo json_encode($aray);
        }
    }
  
    function getOpportunitiesList(){

       $result = $this->tickets_model->getOpportunitiesList();
        //print_r($result);
        $html='<option value="">-- Select Opportunity --</option>';
        foreach ($result as $key => $value) {
           $html.="<option value='".$value->OpportunityID."'>".$value->OpportunityName."</option>";
        }
       echo $html;  
    }
 

    function LoadOppoByCompany(){

        $id = $_POST['id'];
        $result['Opportunity_list'] = $this->tickets_model->getAllOpportunitiesByCompany($id) ;           
		$result['CompanyInfo'] = $this->Booking_model->GetCompanyBookingInfoByID($id);           
            if ($result > 0) { echo(json_encode($result)); }
            else { echo(json_encode(array('status'=>FALSE))); }

    }

    function LoadMaterials(){

        $t = $_POST['id'];
		if($t =='1'){ $type = "IN"; }
		if($t =='2'){ $type = "OUT"; }
        $result['material_list'] = $this->Booking_model->getMaterialList($type);   		 
        if ($result > 0) { echo(json_encode($result)); }
        else { echo(json_encode(array('status'=>FALSE))); }

    }
	function LoadOpportunityContacts(){ 
        $id = $_POST['id'];
        $result['contact_list'] = $this->Booking_model->getContactsByOpportunity($id);           
		$result['OppDetails'] = $this->Booking_model->getOppoByID($id);           
		
            if ($result > 0) { echo(json_encode($result)); }
            else { echo(json_encode(array('status'=>FALSE))); } 
    }
	function DisplayContactDetails(){ 
        $id = $_POST['id'];
        $result['contact'] = $this->Booking_model->getContactDetails($id) ;           
            if ($result > 0) { echo(json_encode($result)); }
            else { echo(json_encode(array('status'=>FALSE))); } 
    }	
	 
	function BookingStageAtSite($LoadID){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
            if($LoadID  == null){ redirect('Loads'); }           
			
			$conditions = array( 'LoadID ' => $LoadID );  
			$data['LoadInfo'] = $this->Booking_model->BookingLoadInfo($LoadID);  
			if($data['LoadInfo']->Status!=1){ redirect('Loads'); }
			 
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 
				
				$SiteInDateTime =date("Y-m-d H:i:s");
				$Notes1	 = $this->security->xss_clean($this->input->post('Notes1'));  
				$GrossWeight	 = $this->security->xss_clean($this->input->post('GrossWeight'));  
				$TipNumber	 = $this->security->xss_clean($this->input->post('TipNumber'));  
				
				$LoadInfo = array('SiteInDateTime'=>$SiteInDateTime,'Notes1'=>$Notes1, 
				'GrossWeight'=>$GrossWeight, 'TipNumber'=>$TipNumber, 'Status' => 2 );
				$cond = array( 'LoadID ' => $LoadID  );  
				$update = $this->Common_model->update("tbl_booking_loads", $LoadInfo, $cond);
				if($update){  
					$this->session->set_flashdata('success', 'Booking stage has been updated successfully');                
				}else{
					$this->session->set_flashdata('error', 'Oooops, Please Try Again Later. ');                
				} 
				redirect('Loads'); 
			}  
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Stage Update to Reach / At Site';
            $this->global['active_menu'] = 'loads';
            
            $this->loadViews("Booking/BookingStageAtSite", $this->global, $data, NULL);
        }
    } 
	function BookingStageLeftSite($LoadID){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
            if($LoadID  == null){ redirect('Loads'); }           
			
			$conditions = array( 'LoadID ' => $LoadID );  
			$data['LoadInfo'] = $this->Booking_model->BookingLoadInfo($LoadID);  
			//if($data['LoadInfo']->Status!=2){ redirect('Loads'); }
			 
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 
				
				$SiteOutDateTime =date("Y-m-d H:i:s");
				$Notes2	 = $this->security->xss_clean($this->input->post('Notes2'));  
				$CustomerName	 = $this->security->xss_clean($this->input->post('CustomerName'));  
				
				$Signature = $this->input->post('Signature', FALSE); 
				 
				if($Signature!=""){  
					$Signature1 = str_replace('data:image/png;base64,', '', $Signature);
					$Signature1 = str_replace(' ', '+', $Signature1); 
					$Signature1 = base64_decode($Signature1);
					
					
					$Signature = md5(date("dmYhisA")).".png"; 
					$file_name = './uploads/Signature/'.$Signature;
					file_put_contents($file_name,$Signature1); 
				}else{
					$Signature = "";
				}
				
				$TicketUniqueID =  $this->generateRandomString(); 
				 
				$LoadInfo = array('SiteOutDateTime'=>$SiteOutDateTime,'Notes2'=>$Notes2, 'ReceiptName'=>$TicketUniqueID.".pdf",
				'Signature'=>$Signature,'CustomerName'=>$CustomerName, 'Status' => 3 );
				$cond = array( 'LoadID ' => $LoadID  );  
				$update = $this->Common_model->update("tbl_booking_loads", $LoadInfo, $cond);
				if($update){
					
					$PDFContentQRY = $this->db->query("select * from tbl_content_settings where id = '1'");
					$PDFContent = $PDFContentQRY->result(); 
					$LT = '';
					if($data['LoadInfo']->LorryType == 1) { $LT = 'Tipper'; }
					else if($data['LoadInfo']->LorryType == 2) { $LT = 'Grab'; }
					else if($data['LoadInfo']->LorryType == 3) { $LT = 'Bin'; }
					else{ $LT = ''; }
						 	
					if($data['LoadInfo']->BookingType==1){ 	
						
						$LastTicketNumber =  $this->tickets_model->LastTicketNo();
						if($LastTicketNumber){ 
							$TicketNumber = $LastTicketNumber['TicketNumber']+1;  
						} else { $TicketNumber = 1; }
						
						$ticketsInfo = array('TicketUniqueID'=>$TicketUniqueID, 'LoadID'=>$LoadID, 'TicketNumber'=>$TicketNumber, 
						'TicketDate'=>date('Y-m-d H:i:s'), 'Conveyance'=> $data['LoadInfo']->ConveyanceNo,
						'OpportunityID'=> $data['LoadInfo']->OpportunityID, 
						'CompanyID'=>$data['LoadInfo']->CompanyID ,
						'DriverName'=> $data['LoadInfo']->DriverName,
						'RegNumber'=>$data['LoadInfo']->VehicleRegNo,
						'Hulller'=> $data['LoadInfo']->Haulier,
						'Tare'=> $data['LoadInfo']->Tare , 
						'driver_id'=> $data['LoadInfo']->DriverID, 
						'DriverLoginID'=>$data['LoadInfo']->DriverLoginID,  
						'MaterialID'=> $data['LoadInfo']->MaterialID,
						'SicCode'=> $data['LoadInfo']->SicCode, 
						'CreateUserID'=>1,
						'CreateDate'=>date('Y-m-d H:i:s'),
						'TypeOfTicket'=>'In', 
						'IsInBound'=>1,
						'pdf_name'=>$TicketUniqueID.'.pdf');
						
						$TicketID = $this->Common_model->insert('tbl_tickets', $ticketsInfo);
						
								
						
						$html = '<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"></head><body> 
						<div style="width:100%;margin-bottom: 0px;margin-top: 0px;font-size: 10px;" >	
							<div style="width:100%; " >
								<div style="width:35%;float: left;" > 		
									<img src="/assets/Uploads/Logo/'.$PDFContent[0]->logo.'" width ="80"> 
								</div>
								<div style="width:65%;float: right;text-align: right;" > 		 
									<b>'.$PDFContent[0]->outpdf_title.'</b><br/> 		
									'.$PDFContent[0]->address.' <br/> 
									<b>Phone:</b> '.$PDFContent[0]->outpdf_phone.' 											
								</div>
							</div>	
							<div style="width:100%;float: left;" >   
								<b>Email:</b> '.$PDFContent[0]->email.' <br/>		
								<b>Web:</b> '.$PDFContent[0]->website.' <br/>		  
								<b>Waste License No: </b>'.$PDFContent[0]->waste_licence.' <br/> 
								<b>Permit Reference No: </b>'.$data['LoadInfo']->PermitRefNo.' <br/><hr>
								<b>'.$PDFContent[0]->head1.'</b><br/> <br>
								<b>'.$PDFContent[0]->head2.'</b><br/> <br>
								<div style="text-align: center;"><b>CONVEYANCE NOTE </b> </div><br>
								<b>Conveyance Note No:</b> '.$data['LoadInfo']->ConveyanceNo.'<br>		
								<b>Date Time: </b>'.date("d-m-Y H:i").' <br>		 
								<b>Company Name: </b> '.$data['LoadInfo']->CompanyName.' <br>		
								<b>Site Address: </b> '.$data['LoadInfo']->OpportunityName.'<br>		 		
								<b>Tip Address: </b> '.$data['LoadInfo']->Street1.' '.$data['LoadInfo']->Street1.' '.$data['LoadInfo']->Town.' '.$data['LoadInfo']->County.' '.$data['LoadInfo']->PostCode.'<br>		 		 
								<b>Material: </b> '.$data['LoadInfo']->MaterialName.' '.$LT.'  <br> 
								<b>SicCode: </b> '.$data['LoadInfo']->SicCode.'  <br>  
								<b>Vehicle Reg. No. </b> '.$data['LoadInfo']->VehicleRegNo.'  <br> 
								<b>Driver Name: </b> '.$data['LoadInfo']->DriverName.'<br> <br/>   
							</div>
							<div><img src="/assets/DriverSignature/'.$data['LoadInfo']->dsignature.'" width ="100" height="40" style="float:left"> </div>  <br> 
							<div style="width:100%;float: left;" >
								<b>Produced By: </b><br>
								<div><img src="/uploads/Signature/'.$Signature.'" width ="100" height="40" style="float:left"></div>
								'.$data['LoadInfo']->CustomerName.'<br><br>
								<div style="font-size: 9px;"> 
									<b>VAT Reg. No: </b> '.$PDFContent[0]->VATRegNo.' <br>
									<b>Company Reg. No: </b> '.$PDFContent[0]->CompanyRegNo.' <br>  
									'.$PDFContent[0]->FooterText.'  
								</div>
							</div>  
						</div></body></html>'; 
				
						$pdfFilePath = WEB_ROOT_PATH."/assets/conveyance/".$TicketUniqueID.'.pdf';  
						$mpdf =  new mPDF('utf-8', array(70,180),'','',5,5,5,5,5,5); 
						//$mpdf->_setPageSize(array(70,180),'P');
						//$mpdf->AddPage('P','','','','',5,5,5,5,5,5);
						//$mpdf->AddPage();
						$mpdf->keep_table_proportions = false; 
						$mpdf->WriteHTML($html);  
						$mpdf->Output($pdfFilePath);
						 
					}	
					
					if($data['LoadInfo']->BookingType==2){ 	
                                  
						$data1['tickets'] = $this->Booking_model->BookingTicketInfo($data['LoadInfo']->TicketID); 
						
						$html =  '<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"></head><body>
						<div style="width:100%;margin-bottom: 0px;margin-top: 0px; font-size: 10px;" >	 
							<div style="width:100%;" ><div style="width:35%;float: left;" >
							<img src="/assets/Uploads/Logo/'.$PDFContent[0]->logo.'" width ="80" ></div> 
								<div style="width:65%;float: right;text-align: right;" > 		  
									<b>'.$PDFContent[0]->outpdf_title.'</b><br/>'.$PDFContent[0]->outpdf_address.'<br/> 		 
									<b>Phone:</b> '.$PDFContent[0]->outpdf_phone.'
								</div> 
							</div>	 
							<div style="width:100%;float: left;" >    
								<b>Email:</b> '.$PDFContent[0]->outpdf_email.'<br/>		 
								<b>Web:</b> '.$PDFContent[0]->outpdf_website.' <br/>		 
								<b>Waste License No: </b> '.$PDFContent[0]->waste_licence.' <br/><hr> 
								<center><b>COMBINED CONVEYANCE CONTROLLED WASTE TRANSFER NOTE</b></center><br/>  
								<b>Ticket NO:</b> '.$data1['tickets']['TicketNumber'].' <br>		 
								<b>Date Time: </b> '.$data1['tickets']['tdate'].' <br>		   
								<b>Vehicle Reg. No. </b> '.$data1['tickets']['RegNumber'].' <br> 
								<b>Haulier: </b> '.$data1['tickets']['Hulller'].' <br> 
								<b>Driver Name: </b> '.$data['LoadInfo']->DriverName.'<br> 
								<b>Driver Signature: </b> <br> 
								<div><img src="/assets/DriverSignature/'.$data['LoadInfo']->dsignature.'" width ="100" height="40" style="float:left"> </div>
								<b>Company Name: </b> '.$data1['tickets']['CompanyName'].' <br>		 
								<b>Site Address: </b> '.$data1['tickets']['OpportunityName'].' <br>	 
								<b>Material: </b> '.$data1['tickets']['MaterialName'].' <br> 
								<b>SIC Code: </b> '.$data1['tickets']['SicCode'].' <br> 
								<b>Gross Weight: </b> '.round($data1['tickets']['GrossWeight']).' KGs <br>		 
								<b>Tare Weight: </b> '.round($data1['tickets']['Tare']).' KGs <br>		 
								<b>Net Weight: </b> '.round($data1['tickets']['Net']).' KGs <br> 
								<p style="font-size: 7px;"> '.$PDFContent[0]->outpdf_para1.' <br>  
								'.$PDFContent[0]->outpdf_para2.'<br>  
								<b>'.$PDFContent[0]->outpdf_para3.'</b></p></div> 
							<div style="width:100%;float: left;" > 
								<b>Received By: </b><br> 
								<div><img src="/uploads/Signature/'.$Signature.'" width ="100" height="40" style="float:left"></div> 
								'.$data['LoadInfo']->CustomerName.' 
								<p style="font-size: 7px;"><b> '.$PDFContent[0]->outpdf_para4.'</b><br><br> 
									<b>VAT Reg. No: </b> '.$PDFContent[0]->VATRegNo.'<br> 
									<b>Company Reg. No: </b>'.$PDFContent[0]->CompanyRegNo.'<br>
									'.$PDFContent[0]->FooterText.'</p></div></div></body></html>';
						
						$pdfFilePath =  WEB_ROOT_PATH."/assets/conveyance/".$TicketUniqueID.".pdf"; 		   
						$mpdf =  new mPDF('utf-8', array(70,210),'','',5,5,5,5,5,5);	   
						$mpdf->keep_table_proportions = false;
						$mpdf->WriteHTML($html);
						$mpdf->Output($pdfFilePath);
								 
                    } 
					 
					$this->session->set_flashdata('success', 'Booking stage has been updated successfully');                
				}else{
					$this->session->set_flashdata('error', 'Oooops, Please Try Again Later. ');                
				} 
				  
				redirect('Loads'); 
			}  
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Stage Update to Left Site';
            $this->global['active_menu'] = 'loads';
            
            $this->loadViews("Booking/BookingStageLeftSite", $this->global, $data, NULL);
        }
    } 
	function BookingStageFinishLoad($LoadID){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
            if($LoadID  == null){ redirect('Loads'); }           
			
			$conditions = array( 'LoadID ' => $LoadID );  
			$data['LoadInfo'] = $this->Booking_model->BookingLoadInfo($LoadID);  
			if($data['LoadInfo']->Status!=3){ redirect('Loads'); }
			 
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 
				 
				$JobEndDateTime =date("Y-m-d H:i:s");
				$Notes	 = $this->security->xss_clean($this->input->post('Notes'));  
				$GrossWeight	 = $this->security->xss_clean($this->input->post('GrossWeight'));  
				$TipNumber	 = $this->security->xss_clean($this->input->post('TipNumber'));  
				
				$LoadInfo = array('JobEndDateTime'=>$JobEndDateTime,'Notes'=>$Notes, 'Status' => 4 ,
				'GrossWeight'=>$GrossWeight, 'TipNumber'=>$TipNumber );
				$cond = array( 'LoadID ' => $LoadID  );  
				$update = $this->Common_model->update("tbl_booking_loads", $LoadInfo, $cond);
				if($update){   
					if($data['LoadInfo']->LoadType==2){ 	
					
						if(isset($_POST['continue']))  {	  
							$TicketID = 0;	 $TicketUniqueID = "";
							
							$LID = $this->generateRandomString();     
							
							$BDate = date('Y-m-d');
							$insertBookingDate = $this->db->query("insert into tbl_booking_date(BookingID,BookingDate) value('".$data['LoadInfo']->BookingID."','".$BDate."')");
							$BookingDateID = $this->db->insert_id();
							
							$LastConNumber =  $this->Booking_model->LastConNumber(); 
							$LConveyanceNo = $LastConNumber['ConveyanceNo']+1;
							
							$LoadInfo = array('LID' => $LID, 
							'BookingID'=>$data['LoadInfo']->BookingID,
							'BookingDateID'=>$BookingDateID, 
							'ConveyanceNo'=>$LConveyanceNo,  
							'DriverID'=>$data['LoadInfo']->DriverID ,
							'DriverLoginID'=>$data['LoadInfo']->DriverLoginID , 
							'MaterialID'=>$data['LoadInfo']->MaterialID ,
							'AllocatedDateTime'=> date('Y-m-d H:i:s'), 
							'TipID'=>$data['LoadInfo']->TipID , 
							'Status'=> 0 ,
							'AutoCreated'=> 0 , 
							'CreatedBy'=> $this->session->userdata['userId'] ); 
							$result1 = $this->Common_model->insert("tbl_booking_loads",$LoadInfo); 
							
							if($data['LoadInfo']->LoadType==2){ 							
								$TicketUniqueID = $this->generateRandomString();                
								$TicketNumber = 1;
								$LastTicketNumber =  $this->Booking_model->LastTicketNo(); 
								if($LastTicketNumber){ 
									$TicketNumber = $LastTicketNumber['TicketNumber']+1;  
								}  
								
								$ticketsInfo = array('TicketUniqueID'=>$TicketUniqueID, 'TicketNumber'=>$TicketNumber, 'TicketDate'=>date('Y-m-d H:i:s'), 
								'LoadID'=>$result1, 'Conveyance'=>$LConveyanceNo,
								'OpportunityID'=> $data['LoadInfo']->OpportunityID, 'CompanyID'=>$data['LoadInfo']->CompanyID ,'DriverName'=>$data['LoadInfo']->lorry_driver_name, 
								'RegNumber'=> $data['LoadInfo']->lorry_RegNumber  ,'Hulller'=> $data['LoadInfo']->Haulier ,'Tare'=> $data['LoadInfo']->lorry_tare ,
								'driversignature'=> $data['LoadInfo']->lorry_signature , 'driver_id'=> $data['LoadInfo']->DriverID , 
								'MaterialID'=> $data['LoadInfo']->MaterialID ,'SicCode'=>$data['LoadInfo']->SicCode, 'CreateUserID'=>$this->session->userdata['userId'] ,
								'CreateDate'=>date('Y-m-d H:i:s'),'TypeOfTicket'=>'Out', 'is_hold'=>1 ); 
								$TicketID = $this->Common_model->insert('tbl_tickets', $ticketsInfo); 					
								
								$LoadInfo1 = array('TicketID'=>$TicketID,'TicketUniqueID'=>$TicketUniqueID );
								$cond1 = array( 'LoadID' => $result1  );  
								$update1 = $this->Common_model->update("tbl_booking_loads", $LoadInfo1, $cond1);
							}
						}	
					}
				
					$this->session->set_flashdata('success', 'Booking stage has been updated successfully');                
				}else{
					$this->session->set_flashdata('error', 'Oooops, Please Try Again Later. ');                
				}  
				redirect('Loads'); 
			}  
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Stage Update to Finish Load';
            $this->global['active_menu'] = 'loads';
            
            $this->loadViews("Booking/BookingStageFinishLoad", $this->global, $data, NULL);
        }
    } 
	
	function BookingStageFinishLoadNonApp($LoadID){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
            if($LoadID  == null){ redirect('Loads'); }           
			
			$conditions = array( 'LoadID ' => $LoadID );  
			$data['LoadInfo'] = $this->Booking_model->BookingLoadInfo($LoadID);  
			//echo $data['LoadInfo']->Status;
			//exit;
			//if($data['LoadInfo']->Status!=1){ redirect('Loads'); }
			 
			if ($this->input->server('REQUEST_METHOD') === 'POST'){ 
				 
				$JobEndDateTime =date("Y-m-d H:i:s");
				$Notes	 = $this->security->xss_clean($this->input->post('Notes'));   
				
				$LoadInfo = array('JobEndDateTime'=>$JobEndDateTime,'Notes'=>$Notes, 'Status' => 4);
				$cond = array( 'LoadID ' => $LoadID  );  
				$update = $this->Common_model->update("tbl_booking_loads", $LoadInfo, $cond);
				if($update){   
					if($data['LoadInfo']->LoadType==2){ 						
						if(isset($_POST['continue']))  {	  
							$LID = $this->generateRandomString();      
							$BDate = date('Y-m-d');
							$insertBookingDate = $this->db->query("insert into tbl_booking_date(BookingID,BookingDate) value('".$data['LoadInfo']->BookingID."','".$BDate."')");
							$BookingDateID = $this->db->insert_id();
							
							$LastConNumber =  $this->Booking_model->LastConNumber(); 
							$LConveyanceNo = $LastConNumber['ConveyanceNo']+1;
							
							$LoadInfo = array('LID' => $LID, 
							'BookingID'=>$data['LoadInfo']->BookingID,
							'BookingDateID'=>$BookingDateID, 
							'ConveyanceNo'=>$LConveyanceNo,  
							'DriverID'=>$data['LoadInfo']->DriverID , 
							'DriverName'=>$data['LoadInfo']->DriverName , 
							'VehicleRegNo'=>$data['LoadInfo']->VehicleRegNo , 
							'MaterialID'=>$data['LoadInfo']->MaterialID ,
							'AllocatedDateTime'=> date('Y-m-d H:i:s'), 
							'TipID'=>$data['LoadInfo']->TipID , 
							'Status'=> 1 ,
							'AutoCreated'=> 0 , 
							'CreatedBy'=> $this->session->userdata['userId'] ); 
							$result1 = $this->Common_model->insert("tbl_booking_loads",$LoadInfo);  
						}	
					}
				
					$this->session->set_flashdata('success', 'Booking stage has been updated successfully');                
				}else{
					$this->session->set_flashdata('error', 'Oooops, Please Try Again Later. ');                
				}  
				redirect('Loads'); 
			}  
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Stage Update to Finish Load';
            $this->global['active_menu'] = 'loads';
            
            $this->loadViews("Booking/BookingStageFinishLoadNonApp", $this->global, $data, NULL);
        }
    } 
	
	function BookingRequest1(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array(); 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Request Listing new';
            $this->global['active_menu'] = 'bookings'; 
            
            $this->loadViews("Booking/BookingRequest1", $this->global, $data, NULL);
        }
    }
	function AjaxBookingsRequest1(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetBookingRequestData1();  
		//echo "<PRE>";
		//print_r($data);
		//echo "</PRE>";
		//exit;
		$this->ajax->send($data);
	}
	function AjaxBookingsRequest2(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetBookingRequestData2();  
		//echo "<PRE>";
		//print_r($data);
		//echo "</PRE>";
		//exit;
		$this->ajax->send($data);
	}
	
	
	function BookingRequest(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array(); 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Booking Request Listing';
            $this->global['active_menu'] = 'bookings'; 
            
            $this->loadViews("Booking/BookingRequest", $this->global, $data, NULL);
        }
    }
	function AjaxBookingsRequest(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetBookingRequestData();  
		//echo "<PRE>";
		//print_r($data);
		//echo "</PRE>";
		//exit;
		$this->ajax->send($data);
	}
	
	function AddBookingRequest(){
        if($this->isAdd == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();           
			
			if ($this->input->server('REQUEST_METHOD') === 'POST'){  
				 
				$this->load->library('form_validation');  
				$this->form_validation->set_rules('CompanyID','Company Name','trim|required');
				$this->form_validation->set_rules('OpportunityID','Opportunity ','trim|required');  
				$this->form_validation->set_rules('ContactID','Contact','trim|required');   
				$this->form_validation->set_rules('ContactMobile','Site Contact Mobile','trim|required');    
				
				if($this->form_validation->run()){ 
				 
					$CompanyID = $this->security->xss_clean($this->input->post('CompanyID')); 
					$CompanyName = $this->security->xss_clean($this->input->post('CompanyName'));
					$CompName = $this->security->xss_clean($this->input->post('CompName'));
					
					$OpportunityID = $this->security->xss_clean($this->input->post('OpportunityID'));                   
					$OppoName = $this->security->xss_clean($this->input->post('OppoName'));                   
					$Street1 = $this->security->xss_clean($this->input->post('Street1'));
					$County = $this->security->xss_clean($this->input->post('County'));
					$Town = $this->security->xss_clean($this->input->post('Town'));
					$PostCode = $this->security->xss_clean($this->input->post('PostCode'));
					
					$ContactID = $this->security->xss_clean($this->input->post('ContactID')); 
					$ContactName = $this->security->xss_clean($this->input->post('ContactName')); 
					$ContactEmail = $this->security->xss_clean($this->input->post('ContactEmail')); 
					$ContactMobile = $this->security->xss_clean($this->input->post('ContactMobile')); 
					    
					$PurchaseOrderNumber = $this->security->xss_clean($this->input->post('PurchaseOrderNumber')); 
					$PriceBy = $this->security->xss_clean($this->input->post('PriceBy'));
					
					$WaitingCharge = $this->security->xss_clean($this->input->post('WaitingCharge'));
					$WaitingTime = $this->security->xss_clean($this->input->post('WaitingTime'));
					   
					$Notes = $this->security->xss_clean($this->input->post('Notes')); 
					$SubTotalAmount = $this->security->xss_clean($this->input->post('SubTotalAmount')); 
					$VatAmount = $this->security->xss_clean($this->input->post('VatAmount')); 
					$TotalAmount = $this->security->xss_clean($this->input->post('TotalAmount')); 
					$PaymentType = $this->security->xss_clean($this->input->post('PaymentType')); 
					$PaymentRefNo = $this->security->xss_clean($this->input->post('PaymentRefNo'));  
					
					$BookingType = $this->security->xss_clean($this->input->post('BookingType')); 
					$BookingDateTime = $this->security->xss_clean($this->input->post('BookingDateTime')); 
					$DescriptionofMaterial = $this->security->xss_clean($this->input->post('DescriptionofMaterial')); 
					$LoadType = $this->security->xss_clean($this->input->post('LoadType')); 
					$LorryType = $this->security->xss_clean($this->input->post('LorryType')); 
					$MaterialName = $this->security->xss_clean($this->input->post('MaterialName')); 
					$Loads = $this->security->xss_clean($this->input->post('Loads')); 
					$Price = $this->security->xss_clean($this->input->post('Price')); 
					$TotalHidden = $this->security->xss_clean($this->input->post('TotalHidden'));  
					  
					if($CompanyID == '0' ){
						if(trim($CompanyName) == '' ){
							$this->session->set_flashdata('error', 'Company Name Must Not be blank');                
							redirect('Bookings');
						}		
						$CompanyID = $this->generateRandomString();
						$CompanyInfo = array('CompanyID'=>$CompanyID,'CompanyIDMapKey'=>$CompanyID, 'CompanyName'=>$CompanyName,'status'=>1,'CreateDate'=>date('Y-m-d H:i:s')); 
						$this->Common_model->insert("tbl_company",$CompanyInfo);
					}	 
					if($OpportunityID == '0'){    
						if(trim($Street1) == '' && trim($Town) == '' && trim($County) == '' && trim($PostCode) == ''  ){
							$this->session->set_flashdata('error', 'Opportunity Must Not be blank');                
							redirect('Bookings');
						}		 
						$OpportunityID = $this->generateRandomString(); 
						$OpportunityName = $Street1.", ".$Town.", ".$County.", ".$PostCode;
						$OppoInfo = array('OpportunityID'=>$OpportunityID,'OpportunityIDMapKey'=>$OpportunityID,'OpportunityName'=>$OpportunityName, 
						'Street1'=>$Street1,'Town'=>$Town ,'County'=>$County ,'PostCode'=>$PostCode); 
						$this->Common_model->insert("tbl_opportunities",$OppoInfo);
						
						$CO = array('OpportunityID'=>$OpportunityID, 'CompanyID'=>$CompanyID ); 
						$this->Common_model->insert("tbl_company_to_opportunities", $CO); 
					}
					if($ContactID == '0'){   
						if(trim($ContactName) == '' ){
							$this->session->set_flashdata('error', 'Contact Name Must Not be blank');                
							redirect('Bookings');
						}
						$ContactID = $this->generateRandomString();  
						$ConInfo = array('ContactID'=>$ContactID,'ContactIDMapKey'=>$ContactID,'ContactName'=>$ContactName,'MobileNumber'=>$ContactMobile,'EmailAddress'=>$ContactEmail); 
						$this->Common_model->insert("tbl_contacts",$ConInfo);
						
						$OC = array('OpportunityID'=>$OpportunityID, 'ContactID'=>$ContactID ); 
						$this->Common_model->insert("tbl_opportunity_to_contact", $OC); 
					}else{
						$ConInfo = array('ContactName'=>$ContactName,'MobileNumber'=>$ContactMobile,'EmailAddress'=>$ContactEmail);  
						$cond = array( 'ContactID' => $ContactID); 
						$this->Common_model->update("tbl_contacts",$ConInfo, $cond); 
					}	
					 
					$BookingInfo = array( 'CompanyID'=>$CompanyID , 'CompanyName'=>$CompName , 'OpportunityID'=>$OpportunityID, 'OpportunityName'=>$OppoName , 
					'ContactID '=>$ContactID  , 'ContactName'=>$ContactName , 'ContactMobile'=>$ContactMobile, 'ContactEmail'=>$ContactEmail , 
					'WaitingCharge'=>$WaitingCharge , 'WaitingTime'=>$WaitingTime ,  'PurchaseOrderNumber'=>$PurchaseOrderNumber , 'PriceBy'=>$PriceBy ,  
					'Notes'=>$Notes , 'SubTotalAmount'=>$SubTotalAmount , 'VatAmount'=>$VatAmount , 'TotalAmount'=>$TotalAmount , 'PaymentType'=>$PaymentType , 
					'PaymentRefNo'=>$PaymentRefNo , 'BookedBy'=>$this->session->userdata['userId'],'Status'=> 1 ); 
					$BookingRequestID  = $this->Common_model->insert("tbl_booking_request",$BookingInfo); 
					if($BookingRequestID ){  
					 
						    for($i = 0; $i < count($BookingType); $i++ ){  
								if($BookingType[$i]!="" && $DescriptionofMaterial[$i]!=""  && $BookingDateTime[$i]!="" ){		 
									$BookingInfo = array('BookingRequestID' => $BookingRequestID , 'BookingType' => $BookingType[$i] , 'MaterialID' => $DescriptionofMaterial[$i], 
									'LoadType' => $LoadType[$i], 'LorryType' => $LorryType[$i] , 'MaterialName'=> $MaterialName[$i], 'Loads' => $Loads[$i], 
									'Days' => '1' , 'Price' => $Price[$i], 'TotalAmount' => $TotalHidden[$i] , 'BookedBy'=>$this->session->userdata['userId']); 
									$BookingID = '';
									$BookingID = $this->Common_model->insert("tbl_booking1", $BookingInfo);	   
									if($BookingID){ 
										$BDT = '';
										$BDT = explode(',',$BookingDateTime[$i]); 
										$BookingDate = array();
										for($j=0;$j<count($BDT);$j++){
											$B = '';
											$B = explode('/',$BDT[$j]);
											$BookingDate[$j] = $B[2]."-".$B[1]."-".$B[0] ; 
										}	  
										sort($BookingDate); 
										for($k=0;$k<count($BookingDate);$k++){ 	
											$BookingDateInfo = array('BookingRequestID' => $BookingRequestID ,'BookingID' => $BookingID , 
											'BookingDate'=> $BookingDate[$k], 'ApproveLoads'=> $Loads[$i], 'BookedBy'=>$this->session->userdata['userId'] ); 
											$this->Common_model->insert("tbl_booking_date1", $BookingDateInfo);	   
										}	 								
									} 
								}	
							}
 
					/*
						$BDT = explode(',',$BookingDateTime); 
						$BookingDate = array();
						for($i=0;$i<count($BDT);$i++){
							$B = explode('/',$BDT[$i]);
							$BookingDate[$i] = $B[2]."-".$B[1]."-".$B[0] ; 
						}	  
						sort($BookingDate); 
						for($i=0;$i<count($BookingDate);$i++){ 
							$BookingInfo1 = array('BookingID' => $BookingRequestID , 'BookingDate'=> $BookingDate[$i] ); 
							$this->Common_model->insert("tbl_booking_date", $BookingInfo1);	   
						}
						if($Price!='' || $Price !=0){ 
							$ProductInfo = array('OpportunityID'=>$OpportunityID, 'MaterialID'=>$DescriptionofMaterial,  
							'DateRequired'=>$BookingDate[0] ,'UnitPrice'=>$Price ,'PurchaseOrderNo'=>$PurchaseOrderNumber , 
							'CreateUserID'=>$this->session->userdata['userId'],'EditUserID'=>$this->session->userdata['userId']);         
							$this->Common_model->insert("tbl_product", $ProductInfo);	   
						}	 */
						  
						$this->session->set_flashdata('success', 'Booking has been Added successfully');                 
					}else{
						$this->session->set_flashdata('error', 'Oooops ... Something Error, Please Try Again Later. ');                 
					}
					redirect('BookingRequest');
				}
			}
			 
			$data['company_list'] = $this->Common_model->CompanyList();
			$data['ApprovalUserList'] = $this->Common_model->ApprovalUserList(); 
			
            $data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1)); 
			$data['county'] = $this->Common_model->get_all('county'); 
			$this->global['pageTitle'] =  WEB_PAGE_TITLE.' : ADD Booking Request';
            $this->global['active_menu'] = 'addbooking'; 

            $this->loadViews("Booking/AddBookingRequest", $this->global, $data, NULL);
        }
    }
	
	function ApproveBookingRequest(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingDateID = $this->input->post('BookingDateID'); 
				
            $con = array('BookingDateID'=>$BookingDateID);  
			$BookingInfo = array('BookingDateStatus'=>'1' , 'ApprovedBy'=> $this->session->userdata['userId'],  'UpdatedBy'=> $this->session->userdata['userId']); 
            $result = $this->Common_model->update("tbl_booking_date1",$BookingInfo, $con); 
			 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE,'BookingDateID'=>$BookingDateID))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }
	
	public function AllocateBookingRequest(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			$data['TodayBookingRecords'] = $this->Booking_model->TodayBookingRequests(); 
			$data['OverdueBookingRecords'] = $this->Booking_model->OverdueBookingRequest(); 
			//$data['BookingRecords'] = $this->Booking_model->FutureBookingListing();   
			$data['BookingRecords'] = $this->Booking_model->FutureBookingRequest();   
			
			//$data['LorryRecords1'] = $this->Booking_model->LorryListAJAX1();  	 
			$data['LorryRecords1'] = $this->Booking_model->LorryListAJAX();  	 
			$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();  	  
			$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	
			$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTAList();  
			 
			$data['TipRecords'] = $this->Booking_model->TipListAJAX(); 
			
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Allocate Booking Request';
            $this->global['active_menu'] = 'bookingallocate'; 
            
            $this->loadViews("Booking/AllocateBookingRequest", $this->global, $data, NULL);
        }
    }
	function ShowUpdateBookingRequestAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $data['BookingID'] = $this->input->post('BookingID');      
			$data['PendingLoads'] = $this->input->post('PendingLoads');      
			$data['TotalLoads'] = $this->input->post('TotalLoads');      
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			$html = $this->load->view('Booking/ShowUpdateBookingRequestAJAX', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowUpdateBookingRequestAJAXPOST(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingID  = $this->input->post('BookingID');      
			$Loads = $this->input->post('Loads');      
			 
			$LoadInfo = array('Loads'=>$Loads);
			$LoadCond = array('BookingID'=>$BookingID);            
            
			$result = $this->Common_model->update("tbl_booking1",$LoadInfo, $LoadCond);  
			
			redirect('AllocateBookingRequest');
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			  
        }
    }
	function ShowLoadsDeleteBookingRequestAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $data['BookingDateID'] = $this->input->post('BookingDateID');      
			$data['PendingLoads'] = $this->input->post('PendingLoads');      
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			$html = $this->load->view('Booking/ShowLoadsDeleteBookingRequestAJAX', $data, true);  
			echo json_encode($html); 
        }
    }
	function ShowLoadsDeleteBookingRequestAJAXPOST(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $BookingDateID  = $this->input->post('BookingDateID');      
			$CancelLoads = $this->input->post('CancelLoads');      
			$PendingLoads = $this->input->post('PendingLoads'); 
			$CancelNote = $this->input->post('CancelNote');    
			$LoadInfo = array('BookingDateStatus'=>1,'CancelLoads'=>$CancelLoads,'CancelNote'=>$CancelNote);
			$LoadCond = array('BookingDateID'=>$BookingDateID);            
            //var_dump($_POST);
			//exit;
			$result = $this->Common_model->update("tbl_booking_date1",$LoadInfo, $LoadCond);  
			
			redirect('AllocateBookingRequest');
			//$data['Loads'] = $this->Booking_model->ShowLoads2($BookingDateID);    
			//var_dump($data);
			//exit; 
			  
        }
    }
	function AllocateBookingRequestAJAX1(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{    
		//var_dump($_POST);
			$data['BookingRequestID']  = $this->input->post('BookingRequestID');  
			$data['BookingID']  = $this->input->post('BookingID');    
			$data['BookingDateID']= $this->input->post('BookingDateID');     
			$data['BookingDate']= $this->input->post('BookingDate');     
			$data['LoadType'] = $this->input->post('LoadType');     
			$data['PendingLoad']  = $this->input->post('PendingLoad');    
			$data['BookingInfo'] = $this->Booking_model->GetBookingBasicInfo1($data['BookingDateID']); 
			//var_dump($data['BookingInfo']);
			//echo $data['BookingInfo']['BookingType'];
			//exit;
			
			if($data['BookingInfo']['BookingType']==1){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedRequestList($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTARequestList();   			    	
				} 
			}
			if($data['BookingInfo']['BookingType']==2){
				if($data['BookingDate']!=""){ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverBookedRequestList1($data['BookingDate']);   			    
				}else{ 
					$data['DriverTodayTAList'] = $this->Booking_model->DriverTodayTARequestList1();   			    	
				} 
			}
			
			$data['LorryRecords'] = $this->Booking_model->LorryListAJAX();  	    
			$data['TipRecords'] = $this->Booking_model->TipListAJAX(); 
			
			$data['LorryListNonApp'] = $this->Booking_model->LorryListNonApp();  	  
			$data['Loads'] = $this->Booking_model->ShowBookingRequestDateLoads($data['BookingDateID']); 
			 
			$html = $this->load->view('Booking/AllocateBookingRequestAjax1', $data, true);  
			echo json_encode($html);   
			  
        }
    }
	function AllocateBookingRequestAJAX(){
        if($this->isEdit == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
			$BookingRequestID = $this->input->post('BookingRequestID');  
			$BookingID = $this->input->post('BookingID');  
			$BookingDateID = $this->input->post('BookingDateID');  
			$BookingDate = $this->input->post('BookingDate');  
			$DriverID = $this->input->post('DriverID'); 
			$TipID = $this->input->post('TipID'); 
			$Qty = $this->input->post('Qty'); 
			$MaterialID = $this->input->post('MaterialID'); 
			$AllocatedDateTime = $this->input->post('AllocatedDateTime'); 
			$Loads = $this->input->post('Loads'); 
			$TotalLoads = $this->input->post('TotalLoads'); 
			$LID = $this->generateRandomString();     
			if($AllocatedDateTime==""){ $AllocatedDateTime = date('Y-m-d H:i:s'); }
			
			$Booking = $this->Booking_model->GetBookingInfo1($BookingID);   
			$Driver = $this->Booking_model->getLorryNoDetails($DriverID); 
			$j=0;		
			for($i=1;$i<=$Qty;$i++){
				if($Booking->BookingType==1){ 
					$AllocatedLoads = $this->Common_model->CountLoads1($BookingDateID); 
					//$cond = array( 'BookingDateID' => $BookingDateID);
					//$AllocatedLoads = $this->Common_model->select_count_where('tbl_booking_loads',$cond); 
				}
				if($Booking->BookingType==2){
					$AllocatedLoads = $this->Common_model->CountLorry($BookingDateID); 
				}
				if($TotalLoads != $AllocatedLoads){
			 
					$TicketID = 0;	 $TicketUniqueID = "";
					if($Booking->BookingType==2){
						if($TipID==1){
							//echo json_encode($Driver);
							if($Driver->AppUser==0){
								$TicketUniqueID = $this->generateRandomString();                
								$TicketNumber = 1;
								$LastTicketNumber =  $this->Booking_model->LastTicketNo(); 
								if($LastTicketNumber){ 
									$TicketNumber = $LastTicketNumber['TicketNumber']+1;  
								}  
								
								$ticketsInfo = array('TicketUniqueID'=>$TicketUniqueID, 'TicketNumber'=>$TicketNumber, 'TicketDate'=>date('Y-m-d H:i:s'), 
								'OpportunityID'=> $Booking->OpportunityID, 'CompanyID'=>$Booking->CompanyID ,'DriverName'=>$Driver->DriverName, 
								'RegNumber'=>$Driver->RegNumber ,'Hulller'=>$Driver->Haulier ,'Tare'=>$Driver->Tare ,'driversignature'=>$Driver->ltsignature , 'driver_id'=>$DriverID, 
								'MaterialID'=>$Booking->MaterialID ,'SicCode'=>$Booking->SicCode,  
								'CreateDate'=>date('Y-m-d H:i:s'),'TypeOfTicket'=>'Out', 'is_hold'=>1 ); 
								$TicketID = $this->Common_model->insert('tbl_tickets', $ticketsInfo); 					
							} 
						}
					} 
					
					$LastConNumber =  $this->Booking_model->LastConNumber1(); 
					if($LastConNumber){  
						$ConveyanceNo = $LastConNumber['ConveyanceNo']+1;  
					}else{
						$data['content'] = $this->Common_model->select_where('content_settings',array('id' => 1));  
						$ConveyanceNo = $data['content']['ConveyanceStart']; 
					}   
					$result1="";
					if($Driver->AppUser==1){ $status = 1; if($Driver->RegNumber!=""){ $RegNumber = $Driver->RegNumber; }else{ $RegNumber = $Driver->ContractorLorryNo;  }
					}else{ $status = 0; $RegNumber = $Driver->RegNumber ; }
					
					$LoadInfo = array('LID' => $LID, 'BookingRequestID'=>$BookingRequestID, 'BookingID'=>$BookingID, 'BookingDateID'=>$BookingDateID, 'ConveyanceNo'=>$ConveyanceNo, 
					'TicketID'=>$TicketID,  'TicketUniqueID'=>$TicketUniqueID, 'DriverID'=>$DriverID ,'DriverLoginID'=>$Driver->DriverID , 
					'DriverName'=>$Driver->DriverName, 'VehicleRegNo' =>$RegNumber , 
					'MaterialID'=>$MaterialID ,'AllocatedDateTime'=>$AllocatedDateTime , 'TipID'=>$TipID , 
					'Status'=> $status ,'AutoCreated'=> 1 , 'CreatedBy'=>$this->session->userdata['userId'] ); 
					$result1 = $this->Common_model->insert("tbl_booking_loads1",$LoadInfo);  
					
					$Message = 'New load has been allocated';
					$this->Fcm_model->sendNotication($DriverID,$Message,'noti');
					
					if($Booking->BookingType==2){
						$ticketsInfo1 = array('LoadID'=>$result1, 'Conveyance'=>$ConveyanceNo, );   
						$cond = array( 'TicketNo' => $TicketID ); 
						$this->Common_model->update("tbl_tickets" , $ticketsInfo1, $cond); 
					}	
					if($result1> 0) {   $j=$j+1; }
					################################################ 
					
				}else{ 
					echo(json_encode(array('status'=>FALSE,'status1'=>1111))); 
				}	  
			} // For 
			
			if($j>0) {   
				if((int)$Loads>0){ (int)$Loads = (int)$Loads-$j; }else{ (int)$Loads = 0; } 
				$data['Loads'] = $this->Booking_model->ShowBookingDateLoads1($BookingDateID);  
				$ShowLoads=$this->load->view('Booking/AllAllocatedAJAX', $data, true);
				echo( json_encode(array('status'=>TRUE, 'ShowLoads'=>$ShowLoads, 'loads'=>$Loads,'Alloloads'=>$j,'BookingType'=>$Booking->BookingType,'LoadType'=>$Booking->LoadType,'BookingDateID'=>$BookingDateID,'BookingDate'=>$BookingDate  )) ); 
			}else { 
				echo(json_encode(array('status'=>FALSE))); 
			}
			 
        }
    }
	
	public function AjaxAllocatedBookingsRequest1(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetAllocatedBookingRequestData1();   
		$this->ajax->send($data);
	}
	
	function ShowRequestLoadsAJAX(){
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{   
			$BookingDateID = $this->input->post('BookingDateID');    
			 
			//$data['Loads'] = $this->Booking_model->ShowLoads($BookingID); 
			$data['Loads'] = $this->Booking_model->ShowBookingRequestDateLoads($BookingDateID); 
			//var_dump($data['Loads']);
			//exit; 
			$html = $this->load->view('Booking/RequestLoadInfoAjax', $data, true);  
			echo json_encode($html); 
        }
    }
	function AddNewLoad(){
         
		$ID = $this->input->post('id');    
		$data['ID'] = $ID; 
		
		//echo $html = $this->load->view('Booking/AddNewLoad', $data, true);  
 
		echo '<tr id="'.$ID.'" ><td><select class="form-control BookingType" id="BookingType'.$ID.'" data-BID="'.$ID.'" name="BookingType[]" required="required"  ></select><div ></div></td> 
		<td><select class="form-control Material " id="DescriptionofMaterial'.$ID.'" name="DescriptionofMaterial[]" required="required" data-live-search="true"  ></select><div ></div></td> 
		<td><select class="form-control LoadType" id="LoadType'.$ID.'" name="LoadType[]" required="required"  > <option value="1">Loads</option><option value="2">TurnAround</option></select> </td> 
		<td><select class="form-control LorryType" id="LorryType'.$ID.'" name="LorryType[]"  data-live-search="true" ><option value="" >Select</option><option value="1" >Tipper</option><option value="2" >Grab</option><option value="3" >Bin</option></select></td> 
		<td><select class="form-control Loads" id="Loads'.$ID.'" name="Loads[]" required="required"   data-live-search="true" >  
		</select></td> 
		<td><div class="input-group date"><div class="input-group-addon"><i class="fa fa-calendar"></i></div><input type="text" class="form-control required BookingDateTime" data-BID="'.$ID.'" id="BookingDateTime'.$ID.'" autocomplete="off" value="" name="BookingDateTime[]" maxlength="65"></div><div ></div></td> 
		<td><input type="text" class="form-control Price" id="Price1" data-BID="'.$ID.'"    name="Price[]" value="" ><span id="pdate1" style="font-size:12px"></span></td> 
		<td><span id="Total1" style="font-size:12px"></span><input type="hidden" id="TotalHidden1"  name="TotalHidden[]"  > </td> </tr>';
 
		//echo json_encode($html); 
	
    }
	
	public function RequestLoads(){ 
        if($this->isView == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{            
            $data = array();     
			 
            $this->global['pageTitle'] = WEB_PAGE_TITLE.' : Request Loads/Lorry List ';
            $this->global['active_menu'] = 'loads'; 
            
            $this->loadViews("Booking/RequestLoads", $this->global, $data, NULL);
        }
    }
	public function AjaxRequestLoads(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetRequestLoadsData();   
		$this->ajax->send($data);
	}
	
	public function AjaxRequestLoads1(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetRequestLoadsData1();  
		$this->ajax->send($data);
	}
	
	public function AjaxRequestLoads2(){  
		$this->load->library('ajax');
		$data = $this->Booking_model->GetRequestLoadsData2();  
		$this->ajax->send($data);
	}
	
	function DeleteRequestLoad(){
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID = $this->input->post('LoadID');  
            $con = array('LoadID'=>$LoadID,'Status'=>'0');            
            $result = $this->Common_model->delete('tbl_booking_loads1', $con); 
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }
	function CancelRequestLoad(){
        if($this->isDelete == 0){
            $data = array();
            $this->global['pageTitle'] = 'Error';             
            $this->loadViews("permission", $this->global, $data, NULL);
        }else{  
            $LoadID = $this->input->post('LoadID');  
			$Notes = $this->input->post('confirmation');  
			
			$ticketsInfo = array('Status'=>'5','CancelNote'=>$Notes);
			$con = array('LoadID'=>$LoadID);            
            $result = $this->Common_model->update("tbl_booking_loads1",$ticketsInfo, $con); 
			
            if ($result > 0) { echo(json_encode(array('status'=>TRUE))); }
            else { echo(json_encode(array('status'=>FALSE))); }
        }
    }
	
	function BookingRequestTableMeta(){
        echo '{"Name":"tbl_booking","Deletable":false,"Action":true,"Insertable":false,"Column":[{"Name":"BookingRequestID","Title":"BNO","Editable":null,"Searchable":true,"Class":null},{"Name":"BookingDate","Title":"Request Date","Editable":null,"Searchable":true,"Class":null},{"Name":"CompanyName","Title":"Company Name","Editable":null,"Searchable":true,"Class":null},{"Name":"OpportunityName","Title":"Site Name","Editable":null,"Searchable":true,"Class":null},{"Name":"MaterialName","Title":"Material","Editable":null,"Searchable":true,"Class":null},{"Name":"BookingType","Title":"Booking Type","Editable":null,"Searchable":true,"Class":null},{"Name":"LoadType","Title":"Load Type","Editable":null,"Searchable":true,"Class":null},{"Name":"Loads","Title":"Loads Lorry","Editable":null,"Searchable":true,"Class":null},{"Name":"LorryType","Title":"Lorry Type","Editable":null,"Searchable":true,"Class":null},{"Name":"Notes","Title":"Notes","Editable":null,"Searchable":true,"Class":null},{"Name":"BookedName","Title":"Created By","Editable":null,"Searchable":true,"Class":null},{"Name":"CreateDateTime","Title":"Created Datetime","Editable":null,"Searchable":true,"Class":null}]}'; 
    }
	function BookingRequestTableMeta1(){
        echo '{"Name":"tbl_booking","Deletable":false,"Action":true,"Insertable":false,"Column":[{"Name":"BookingRequestID","Title":"BNO","Editable":null,"Searchable":true,"Class":null},{"Name":"BookingDate","Title":"Request Date","Editable":null,"Searchable":true,"Class":null},{"Name":"CompanyName","Title":"Company Name","Editable":null,"Searchable":true,"Class":null},{"Name":"OpportunityName","Title":"Site Name","Editable":null,"Searchable":true,"Class":null},{"Name":"MaterialName","Title":"Material","Editable":null,"Searchable":true,"Class":null},{"Name":"BookingType","Title":"Booking Type","Editable":null,"Searchable":true,"Class":null},{"Name":"LoadType","Title":"Load Type","Editable":null,"Searchable":true,"Class":null},{"Name":"Loads","Title":"Loads Lorry","Editable":null,"Searchable":true,"Class":null},{"Name":"LorryType","Title":"Lorry Type","Editable":null,"Searchable":true,"Class":null},{"Name":"Notes","Title":"Notes","Editable":null,"Searchable":true,"Class":null},{"Name":"BookedName","Title":"Created By","Editable":null,"Searchable":true,"Class":null},{"Name":"CreateDateTime","Title":"Created Datetime","Editable":null,"Searchable":true,"Class":null}]}'; 
    }
	
    function generateRandomString($length = 12) {
		return substr(str_shuffle(str_repeat($x='0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', ceil($length/strlen($x)) )),1,$length);
	}
}

?>
